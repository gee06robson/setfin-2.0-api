"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
var express_1 = require("express");
var AuthenticateUserController_1 = require("./Controllers/User/AuthenticateUserController");
var CreateUnityController_1 = require("./Controllers/Unity/CreateUnityController");
var ensureAuthenticated_1 = require("./Middlewares/ensureAuthenticated");
var CreateCreditorController_1 = require("./Controllers/Creditor/CreateCreditorController");
var ListUnitsController_1 = require("./Controllers/Unity/ListUnitsController");
var ListUsersController_1 = require("./Controllers/User/ListUsersController");
var CreateDocumentController_1 = require("./Controllers/Document/CreateDocumentController");
var ListDocumentsController_1 = require("./Controllers/Document/ListDocumentsController");
var ProfileUserController_1 = require("./Controllers/User/ProfileUserController");
var SelectCreditorController_1 = require("./Controllers/Creditor/SelectCreditorController");
var SelectDocumentController_1 = require("./Controllers/Document/SelectDocumentController");
var UpdateDocumentController_1 = require("./Controllers/Document/UpdateDocumentController");
var FilterDocumentsController_1 = require("./Controllers/Document/FilterDocumentsController");
var CreateTaxesController_1 = require("./Controllers/Taxes/CreateTaxesController");
var ListTaxesController_1 = require("./Controllers/Taxes/ListTaxesController");
var AddTaxesDocumentController_1 = require("./Controllers/Taxes/AddTaxesDocumentController");
var RemoveTaxesDocumentController_1 = require("./Controllers/Taxes/RemoveTaxesDocumentController");
var DeleteDocumentController_1 = require("./Controllers/Document/DeleteDocumentController");
var router = (0, express_1.Router)();
exports.router = router;
router.post("/user", new AuthenticateUserController_1.AuthenticateUserController().handle);
router.get("/users", new ListUsersController_1.ListUsersController().handle);
router.get("/profile", ensureAuthenticated_1.ensureAuthenticated, new ProfileUserController_1.ProfileUserController().handle);
router.post("/unity", ensureAuthenticated_1.ensureAuthenticated, new CreateUnityController_1.CreateUnityController().handle);
router.get("/units", ensureAuthenticated_1.ensureAuthenticated, new ListUnitsController_1.ListUnitsController().handle);
router.post("/creditor", ensureAuthenticated_1.ensureAuthenticated, new CreateCreditorController_1.CreateCreditorController().handle);
router.post("/select_creditor", ensureAuthenticated_1.ensureAuthenticated, new SelectCreditorController_1.SelectCreditorController().handle);
router.post("/document", ensureAuthenticated_1.ensureAuthenticated, new CreateDocumentController_1.CreateDocumentController().handle);
router.post("/documents", ensureAuthenticated_1.ensureAuthenticated, new ListDocumentsController_1.ListDocumentsController().handle);
router.post("/documents/filter", ensureAuthenticated_1.ensureAuthenticated, new FilterDocumentsController_1.FilterDocumentsController().handle);
router.post("/document/update", ensureAuthenticated_1.ensureAuthenticated, new UpdateDocumentController_1.UpdateDocumentController().handle);
router.get("/select_document/:id", ensureAuthenticated_1.ensureAuthenticated, new SelectDocumentController_1.SelectDocumentController().handle);
router.post("/taxe", ensureAuthenticated_1.ensureAuthenticated, new CreateTaxesController_1.CreateTaxesController().handle);
router.post("/document/delete", ensureAuthenticated_1.ensureAuthenticated, new DeleteDocumentController_1.DeleteDocumentController().handle);
router.get("/list/taxes/", ensureAuthenticated_1.ensureAuthenticated, new ListTaxesController_1.ListTaxesController().handle);
router.post("/taxes/document/", ensureAuthenticated_1.ensureAuthenticated, new AddTaxesDocumentController_1.AddTaxesDocumentController().handle);
router.post("/taxe/remove/document", ensureAuthenticated_1.ensureAuthenticated, new RemoveTaxesDocumentController_1.RemoveTaxesDocumentController().handle);
